[_] extra credit
	[_] contribute test program(s) that fail solution parser
		; The supplied parser incorrectly accepts functions with arrays that
		; do not have an empty first dimension, per the spec
		; (told prof about this)
	[_] implement error recovery
		class 8 slides, p.9,10
		[_] handle parse errors and continue parsing
		[_] demonstrate usage with test case

[_] final TODOs (prior to homework submission)
	[_] no bison warnings/conflicts
		these do not cause bison to return a nonzero exit code!
	[_] all unit tests pass
	[_] exclude valgrind memory checks from default build
	[_] try on different machines

[X] "Other function_decl productions"?
[X] create unit tests
	[X] arrays
		[X] multidimensional array declaration and usage
		[X] first dim must be empty in a function
		[X] declaration dims cannot be empty
		[X] declaration dims must be a constant
	[X] failing unit tests
		[X] unmatched parens
		[X] arrays
			[X] multidimensional array declaration and usage
			[X] multidimensional array usage
		[N] no main method defined
			Is it the job of the parser to fail is main() is not defined?
				falls under semantic analysis
	dragon book example 4.16 p.211-212
[N] anything special required for library calls like read(), write()?
	Doesn't appear to be, just recognize them during semantic analysis and handle appropriately.
[N] main() method must exist
	Is it the job of the parser to fail is main() is not defined?
		No... will be done during syntax analysis
[N] disambiguate if/else parsing(?)
	Not necessary--Bison's default behavior is acceptable.
[X] if statements
[X] use "simple.in" instead of "empty.in" during valgrind check
	more complete memory check
[X] create test harness
