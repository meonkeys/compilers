[X] recognize tokens
	[X] operators
		+ | - | * | /
	[X] separators
		[ \t\n]+
	[X] identifiers
		examples: n, abc, def, new, read, write
	[X] reserved words
		int | float | struct
	[X] constants
		examples: 1, "Enter a number"
	[X] whitespace
[X] deal with parens, commas, semicolons, curly braces
[_] count
	[X] total number of tokens
	[X] total number of lines
	[X] total number of comments
	[_] frequencies of each identifier
[_] report
	[X] total number of tokens
	[X] total number of lines
	[X] total number of comments
	[X] comments themselves
		store comment offsets in input stream using (start|end)comment
		"replay" comments in main()
			can fseek(), fread() into buffer and fwrite() to stdout
	[_] frequencies of each identifier
[_] add reserved words to symbol table
[_] sort identifiers alphabetically
[_] symbol table supports efficient insertion, lookup, deletion
[_] all unit tests pass
[_] exclude valgrind memory checks from default build
[X] fix memory leak caused by lex stack or something
	valgrind --leak-check=full --show-reachable=yes ./scan < tests/simple.in > /dev/null
	DONE! References:
		http://flex.sf.net/manual/Init-and-Destroy-Functions.html
		http://flex.sf.net/manual/The-Default-Memory-Management.html
		http://flex.sf.net/manual/Memory-leak-_002d-16386-bytes-allocated-by-malloc_002e.html
